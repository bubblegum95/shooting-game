services:
  app:
    build:
      context: ./
    container_name: app
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SYNC=${DB_SYNC}
      - REDIS_NODE_HOST_0
      - REDIS_NODE_PORT_0
      - REDIS_NODE_HOST_1
      - REDIS_NODE_PORT_1
      - REDIS_NODE_HOST_2
      - REDIS_NODE_PORT_2
      - REDIS_NODE_HOST_3
      - REDIS_NODE_PORT_3
      - REDIS_NODE_HOST_4
      - REDIS_NODE_PORT_4
      - REDIS_NODE_HOST_5
      - REDIS_NODE_PORT_5
      - REDIS_DB=${REDIS_DB}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - node_game
    expose:
      - 3000 # Nginx에서 접근 가능하도록 노출
    ports:
      - '${SERVER_PORT}:${SERVER_PORT}'
    depends_on:
      - redis-node-5

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:8080
    networks:
      - node_game
    depends_on:
      - app

  redis-node-0:
    container_name: redis-node-0
    image: bitnami/redis-cluster:latest
    ports:
      - 6371:6379
    volumes:
      - ./data:/bitnami/redis/data
    user: '1001'
    command: >
      bash -c "
      mkdir -p /bitnami/redis/data &&
      chown -R 1001:1001 /bitnami/redis/data &&
      chmod -R 775 /bitnami/redis/data &&
      redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes"
    environment:
      - REDIS_NODES=${REDIS_NODES}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - node_game
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  redis-node-1:
    container_name: redis-node-1
    image: bitnami/redis-cluster:latest
    ports:
      - 6372:6379
    volumes:
      - ./data:/bitnami/redis/data
    user: '1001'
    command: >
      bash -c "
      mkdir -p /bitnami/redis/data &&
      chown -R 1001:1001 /bitnami/redis/data &&
      chmod -R 775 /bitnami/redis/data &&
      redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes"
    environment:
      - REDIS_NODES=${REDIS_NODES}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - node_game
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - redis-node-0

  redis-node-2:
    container_name: redis-node-2
    image: bitnami/redis-cluster:latest
    ports:
      - 6373:6379
    volumes:
      - ./data:/bitnami/redis/data
    user: '1001'
    command: >
      bash -c "
      mkdir -p /bitnami/redis/data &&
      chown -R 1001:1001 /bitnami/redis/data &&
      chmod -R 775 /bitnami/redis/data &&
      redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes"
    environment:
      - REDIS_NODES=${REDIS_NODES}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - node_game
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - redis-node-1

  redis-node-3:
    container_name: redis-node-3
    image: bitnami/redis-cluster:latest
    ports:
      - 6374:6379
    volumes:
      - ./data:/bitnami/redis/data
    user: '1001'
    command: >
      bash -c "
      mkdir -p /bitnami/redis/data &&
      chown -R 1001:1001 /bitnami/redis/data &&
      chmod -R 775 /bitnami/redis/data &&
      redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes"
    environment:
      - REDIS_NODES=${REDIS_NODES}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - node_game
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - redis-node-2

  redis-node-4:
    container_name: redis-node-4
    image: bitnami/redis-cluster:latest
    ports:
      - 6375:6379
    volumes:
      - ./data:/bitnami/redis/data
    user: '1001'
    command: >
      bash -c "
      mkdir -p /bitnami/redis/data &&
      chown -R 1001:1001 /bitnami/redis/data &&
      chmod -R 775 /bitnami/redis/data &&
      redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes"
    environment:
      - REDIS_NODES=${REDIS_NODES}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - node_game
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - redis-node-3

  redis-node-5:
    container_name: redis-node-5
    image: bitnami/redis-cluster:latest
    ports:
      - 6376:6379
    volumes:
      - ./data:/bitnami/redis/data
    user: '1001'
    command: >
      bash -c "
      mkdir -p /bitnami/redis/data &&
      chown -R 1001:1001 /bitnami/redis/data &&
      chmod -R 775 /bitnami/redis/data &&
      redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes"
    environment:
      - REDIS_NODES=${REDIS_NODES}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_CLUSTER_REPLICAS=1
      - REDIS_CLUSTER_CREATOR=yes
    networks:
      - node_game
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - redis-node-4

volumes:
  redis-cluster-0:
    driver: local
  redis-cluster-1:
    driver: local
  redis-cluster-2:
    driver: local
  redis-cluster-3:
    driver: local
  redis-cluster-4:
    driver: local
  redis-cluster-5:
    driver: local

networks:
  node_game:
    name: node_game
    driver: bridge
